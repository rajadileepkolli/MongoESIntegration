buildscript {
    ext { springBootVersion = '1.5.22.RELEASE' }
    repositories { mavenCentral() }
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")  }
}

plugins {
    id "org.sonarqube" version "3.3"
    id "net.saliman.cobertura" version "2.6.1"
    id "org.asciidoctor.convert" version "1.6.1"
    id "io.spring.dependency-management" version "0.6.1.RELEASE"
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.projectName", "DigitalBridgeApplication"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "cobertura"
        property "sonar.cobertura.reportPath", file("$buildDir/reports/cobertura/coverage.xml")
    }
}

war {
    baseName = 'digitalbridge'
    version = '0.0.2-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories { mavenCentral() }

configurations { providedRuntime }

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-data-rest'){ exclude module: 'json-patch' }
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.elasticsearch:elasticsearch'){
        exclude module: 'lucene-backward-codecs'
        exclude module: 'lucene-queries'
        exclude module: 'lucene-memory'
        exclude module: 'lucene-highlighter'
        exclude module: 'lucene-queryparser'
        exclude module: 'lucene-join'
        exclude module: 'lucene-spatial'
        exclude module: 'joda-convert'
        exclude group:'com.fasterxml.jackson.dataformat'
    }
    compile('io.searchbox:jest')
    compile('org.apache.cxf:cxf-rt-frontend-jaxws:3.1.7')
    compile('org.apache.cxf:cxf-rt-transports-http:3.1.7')
    compile('org.projectlombok:lombok')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('com.jayway.jsonpath:json-path')
    testCompile('com.fasterxml.jackson.datatype:jackson-datatype-joda')
    testCompile('org.springframework.boot:spring-boot-starter-web-services')
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

ext { snippetsDir = file('target/generated-snippets') }

test { outputs.dir snippetsDir }

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

task wrapper(type: Wrapper) { gradleVersion = '3.0' }
